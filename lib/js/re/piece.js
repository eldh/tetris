// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Pixel = require("./pixel.js");
var Random = require("bs-platform/lib/js/random.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var View$BsReactNative = require("bs-react-native/lib/js/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/lib/js/src/style.js");

function listPiecesRec(_arr) {
  while(true) {
    var arr = _arr;
    if (arr) {
      switch (arr[0]) {
        case 0 : 
            _arr = /* :: */[
              /* LeftS */1,
              arr
            ];
            continue ;
        case 1 : 
            _arr = /* :: */[
              /* RightL */2,
              arr
            ];
            continue ;
        case 2 : 
            _arr = /* :: */[
              /* LeftL */3,
              arr
            ];
            continue ;
        case 3 : 
            _arr = /* :: */[
              /* T */4,
              arr
            ];
            continue ;
        case 4 : 
            _arr = /* :: */[
              /* Long */5,
              arr
            ];
            continue ;
        case 5 : 
            _arr = /* :: */[
              /* Square */6,
              arr
            ];
            continue ;
        case 6 : 
            return arr;
        
      }
    } else {
      _arr = /* :: */[
        /* RightS */0,
        /* [] */0
      ];
      continue ;
    }
  };
}

var listPieces = listPiecesRec(/* :: */[
      /* RightS */0,
      /* [] */0
    ]);

function getStringForPeice(piece) {
  switch (piece) {
    case 0 : 
        return "RightS";
    case 1 : 
        return "LeftS";
    case 2 : 
        return "RightL";
    case 3 : 
        return "LeftL";
    case 4 : 
        return "T";
    case 5 : 
        return "Long";
    case 6 : 
        return "Square";
    
  }
}

function getColorForPeice(piece) {
  switch (piece) {
    case 0 : 
        return "teal";
    case 1 : 
        return "green";
    case 2 : 
        return "red";
    case 3 : 
        return "blue";
    case 4 : 
        return "purple";
    case 5 : 
        return "orange";
    case 6 : 
        return "yellow";
    
  }
}

Random.init(Date.now() | 0);

var numberOfPieces = List.length(listPieces);

function createPiece() {
  return List.nth(listPieces, Random.$$int(numberOfPieces));
}

function getPositionsForPeice(piece) {
  switch (piece) {
    case 0 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      -1,
                      -1
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        -1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            1,
                            -1
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          -1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            1
                          ],
                          /* :: */[
                            /* tuple */[
                              1,
                              1
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            -1,
                            1
                          ],
                          /* :: */[
                            /* tuple */[
                              -1,
                              0
                            ],
                            /* :: */[
                              /* tuple */[
                                0,
                                -1
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    case 1 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      -1,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        -1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          -1
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          -1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            -1,
                            -1
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          -1,
                          1
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            1
                          ],
                          /* :: */[
                            /* tuple */[
                              1,
                              0
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            1,
                            1
                          ],
                          /* :: */[
                            /* tuple */[
                              1,
                              0
                            ],
                            /* :: */[
                              /* tuple */[
                                0,
                                -1
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    case 2 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      0,
                      1
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        2
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        -1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            2,
                            0
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          -1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            -1
                          ],
                          /* :: */[
                            /* tuple */[
                              0,
                              -2
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            -2,
                            0
                          ],
                          /* :: */[
                            /* tuple */[
                              -1,
                              0
                            ],
                            /* :: */[
                              /* tuple */[
                                0,
                                1
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    case 3 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      -1,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          0,
                          2
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            2,
                            0
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          0,
                          -2
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            -1
                          ],
                          /* :: */[
                            /* tuple */[
                              1,
                              0
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            -2,
                            0
                          ],
                          /* :: */[
                            /* tuple */[
                              -1,
                              0
                            ],
                            /* :: */[
                              /* tuple */[
                                0,
                                -1
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    case 4 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      -1,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            -1
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          -1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            1,
                            0
                          ],
                          /* :: */[
                            /* tuple */[
                              0,
                              -1
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            -1,
                            0
                          ],
                          /* :: */[
                            /* tuple */[
                              0,
                              1
                            ],
                            /* :: */[
                              /* tuple */[
                                0,
                                -1
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    case 5 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      0,
                      -1
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          0,
                          2
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        -1,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            2,
                            0
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          0,
                          -2
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            -1
                          ],
                          /* :: */[
                            /* tuple */[
                              0,
                              1
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            -2,
                            0
                          ],
                          /* :: */[
                            /* tuple */[
                              -1,
                              0
                            ],
                            /* :: */[
                              /* tuple */[
                                1,
                                0
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    case 6 : 
        return /* :: */[
                /* :: */[
                  /* tuple */[
                    0,
                    0
                  ],
                  /* :: */[
                    /* tuple */[
                      0,
                      1
                    ],
                    /* :: */[
                      /* tuple */[
                        1,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          1
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ],
                /* :: */[
                  /* :: */[
                    /* tuple */[
                      0,
                      0
                    ],
                    /* :: */[
                      /* tuple */[
                        0,
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          1,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            1,
                            1
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      /* tuple */[
                        0,
                        0
                      ],
                      /* :: */[
                        /* tuple */[
                          0,
                          1
                        ],
                        /* :: */[
                          /* tuple */[
                            1,
                            0
                          ],
                          /* :: */[
                            /* tuple */[
                              1,
                              1
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        /* tuple */[
                          0,
                          0
                        ],
                        /* :: */[
                          /* tuple */[
                            0,
                            1
                          ],
                          /* :: */[
                            /* tuple */[
                              1,
                              0
                            ],
                            /* :: */[
                              /* tuple */[
                                1,
                                1
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ];
    
  }
}

function renderPart(param, piece, i, param$1) {
  return ReasonReact.element(String(i), undefined, Pixel.make(/* tuple */[
                  param[0] + param$1[0] | 0,
                  param[1] + param$1[1] | 0
                ], getColorForPeice(piece), /* array */[]));
}

var component = ReasonReact.statelessComponent("Piece");

function make(piece, rotation, pos, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var comps = List.mapi((function (param, param$1) {
                      return renderPart(pos, piece, param, param$1);
                    }), List.nth(getPositionsForPeice(piece), rotation));
              return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(Style$BsReactNative.style(/* :: */[
                                        Style$BsReactNative.width(/* Pct */Block.__(1, [100])),
                                        /* :: */[
                                          Style$BsReactNative.height(/* Pct */Block.__(1, [100])),
                                          /* :: */[
                                            Style$BsReactNative.position(/* Absolute */0),
                                            /* [] */0
                                          ]
                                        ]
                                      ])), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[$$Array.of_list(comps)]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.listPiecesRec = listPiecesRec;
exports.listPieces = listPieces;
exports.getStringForPeice = getStringForPeice;
exports.getColorForPeice = getColorForPeice;
exports.numberOfPieces = numberOfPieces;
exports.createPiece = createPiece;
exports.getPositionsForPeice = getPositionsForPeice;
exports.renderPart = renderPart;
exports.component = component;
exports.make = make;
/* listPieces Not a pure module */
